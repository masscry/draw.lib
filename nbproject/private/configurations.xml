<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="100">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root=".debug" name="1">
      <df name="CMakeFiles">
        <df name="3.10.2">
          <df name="CompilerIdC">
            <df name="tmp">
            </df>
          </df>
          <df name="CompilerIdCXX">
            <df name="tmp">
            </df>
          </df>
        </df>
        <df name="CMakeTmp">
        </df>
        <df name="draw.dir">
          <df name="src">
          </df>
        </df>
        <df name="ex000.dir">
          <df name="examples">
          </df>
        </df>
      </df>
      <df name="contrib">
        <df name="alpha0">
          <df name="CMakeFiles">
            <df name="alpha0.dir">
              <df name="contrib">
              </df>
              <df name="src">
                <df name="json2">
                </df>
              </df>
            </df>
            <df name="Export">
              <df name="share">
                <df name="cmake">
                </df>
              </df>
            </df>
            <df name="js-valid.dir">
              <df name="test">
              </df>
            </df>
            <df name="json2-test.dir">
              <df name="contrib">
              </df>
              <df name="test">
              </df>
            </df>
            <df name="rbuf-udict-test.dir">
              <df name="test">
              </df>
            </df>
          </df>
        </df>
        <df name="CMakeFiles">
          <df name="glad.dir">
            <df name="glad">
              <df name="src">
              </df>
            </df>
          </df>
        </df>
        <df name="glm">
          <df name="CMakeFiles">
            <df name="Export">
              <df name="lib">
                <df name="cmake">
                  <df name="glm">
                  </df>
                </df>
              </df>
            </df>
            <df name="uninstall.dir">
            </df>
          </df>
          <df name="glm">
            <df name="CMakeFiles">
              <df name="glm_shared.dir">
                <df name="detail">
                </df>
              </df>
              <df name="glm_static.dir">
                <df name="detail">
                </df>
              </df>
            </df>
          </df>
          <df name="lib">
            <df name="cmake">
              <df name="glm">
              </df>
            </df>
          </df>
          <df name="test">
            <df name="CMakeFiles">
            </df>
          </df>
        </df>
      </df>
      <df name="evoid">
        <df name="CMakeFiles">
          <df name="evoid.dir">
            <df name="src">
            </df>
          </df>
        </df>
      </df>
      <df name="include">
        <df name="draw">
        </df>
      </df>
    </df>
    <df root="." name="0">
      <df name=".debug">
        <df name="CMakeFiles">
          <df name="3.10.2">
            <df name="CompilerIdC">
              <df name="tmp">
              </df>
              <in>CMakeCCompilerId.c</in>
            </df>
            <df name="CompilerIdCXX">
              <df name="tmp">
              </df>
              <in>CMakeCXXCompilerId.cpp</in>
            </df>
          </df>
          <df name="CMakeTmp">
          </df>
          <df name="draw.dir">
            <df name="src">
            </df>
          </df>
          <df name="ex000.dir">
            <df name="examples">
            </df>
          </df>
          <in>feature_tests.c</in>
          <in>feature_tests.cxx</in>
        </df>
        <df name="contrib">
          <df name="alpha0">
            <df name="CMakeFiles">
              <df name="alpha0.dir">
                <df name="contrib">
                </df>
                <df name="src">
                  <df name="json2">
                  </df>
                </df>
              </df>
              <df name="Export">
                <df name="share">
                  <df name="cmake">
                  </df>
                </df>
              </df>
              <df name="js-valid.dir">
                <df name="test">
                </df>
              </df>
              <df name="json2-test.dir">
                <df name="contrib">
                </df>
                <df name="test">
                </df>
              </df>
              <df name="rbuf-udict-test.dir">
                <df name="test">
                </df>
              </df>
            </df>
          </df>
          <df name="CMakeFiles">
            <df name="glad.dir">
              <df name="glad">
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="glm">
            <df name="CMakeFiles">
              <df name="Export">
                <df name="lib">
                  <df name="cmake">
                    <df name="glm">
                    </df>
                  </df>
                </df>
              </df>
              <df name="uninstall.dir">
              </df>
            </df>
            <df name="glm">
              <df name="CMakeFiles">
                <df name="glm_shared.dir">
                  <df name="detail">
                  </df>
                </df>
                <df name="glm_static.dir">
                  <df name="detail">
                  </df>
                </df>
              </df>
            </df>
            <df name="lib">
              <df name="cmake">
                <df name="glm">
                </df>
              </df>
            </df>
            <df name="test">
              <df name="CMakeFiles">
              </df>
            </df>
          </df>
        </df>
        <df name="evoid">
          <df name="CMakeFiles">
            <df name="evoid.dir">
              <df name="src">
              </df>
            </df>
          </df>
        </df>
        <df name="include">
          <df name="draw">
            <in>config.h</in>
          </df>
        </df>
      </df>
      <df name=".release">
        <df name="CMakeFiles">
          <df name="3.10.2">
            <df name="CompilerIdC">
              <df name="tmp">
              </df>
              <in>CMakeCCompilerId.c</in>
            </df>
            <df name="CompilerIdCXX">
              <df name="tmp">
              </df>
              <in>CMakeCXXCompilerId.cpp</in>
            </df>
          </df>
          <df name="CMakeTmp">
          </df>
          <df name="draw.dir">
            <df name="src">
            </df>
          </df>
          <df name="ex000.dir">
            <df name="examples">
            </df>
          </df>
          <in>feature_tests.c</in>
          <in>feature_tests.cxx</in>
        </df>
        <df name="contrib">
          <df name="alpha0">
            <df name="CMakeFiles">
              <df name="alpha0.dir">
                <df name="contrib">
                </df>
                <df name="src">
                  <df name="json2">
                  </df>
                </df>
              </df>
              <df name="Export">
                <df name="share">
                  <df name="cmake">
                  </df>
                </df>
              </df>
              <df name="js-valid.dir">
                <df name="test">
                </df>
              </df>
              <df name="json2-test.dir">
                <df name="contrib">
                </df>
                <df name="test">
                </df>
              </df>
              <df name="rbuf-udict-test.dir">
                <df name="test">
                </df>
              </df>
            </df>
          </df>
          <df name="CMakeFiles">
            <df name="glad.dir">
              <df name="glad">
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="glm">
            <df name="CMakeFiles">
              <df name="Export">
                <df name="lib">
                  <df name="cmake">
                    <df name="glm">
                    </df>
                  </df>
                </df>
              </df>
              <df name="uninstall.dir">
              </df>
            </df>
            <df name="glm">
              <df name="CMakeFiles">
                <df name="glm_shared.dir">
                  <df name="detail">
                  </df>
                </df>
                <df name="glm_static.dir">
                  <df name="detail">
                  </df>
                </df>
              </df>
            </df>
            <df name="lib">
              <df name="cmake">
                <df name="glm">
                </df>
              </df>
            </df>
            <df name="test">
              <df name="CMakeFiles">
              </df>
            </df>
          </df>
        </df>
        <df name="evoid">
          <df name="CMakeFiles">
            <df name="evoid.dir">
              <df name="src">
              </df>
            </df>
          </df>
        </df>
        <df name="include">
          <df name="draw">
            <in>config.h</in>
          </df>
        </df>
        <df name="usr">
          <df name="local">
            <df name="bin">
            </df>
            <df name="share">
            </df>
          </df>
        </df>
      </df>
      <df name=".vscode">
      </df>
      <df name="contrib">
        <df name="alpha0">
          <df name="contrib">
            <in>CuTest.c</in>
            <in>CuTest.h</in>
            <in>mur32.c</in>
          </df>
          <df name="include">
            <df name="json2">
              <in>j2dynstr.h</in>
              <in>j2parse.h</in>
              <in>j2print.h</in>
              <in>j2value.h</in>
            </df>
            <in>json2.h</in>
            <in>rbuf.h</in>
            <in>udict.h</in>
          </df>
          <df name="share">
          </df>
          <df name="src">
            <df name="json2">
              <df name="j2value">
                <in>j2array.c</in>
                <in>j2number.c</in>
                <in>j2object.c</in>
                <in>j2special.c</in>
                <in>j2string.c</in>
              </df>
              <in>j2dynstr.c</in>
              <in>j2parse.c</in>
              <in>j2print.c</in>
              <in>j2value.c</in>
            </df>
            <in>rbuf.c</in>
            <in>udict.c</in>
          </df>
          <df name="test">
            <in>j2parser-test.c</in>
            <in>j2printer-test.c</in>
            <in>js-valid.c</in>
            <in>json2-test.c</in>
            <in>rbuf-udict-test.c</in>
          </df>
        </df>
        <df name="glad">
          <df name="include">
            <df name="glad">
              <in>glad.h</in>
            </df>
            <df name="KHR">
              <in>khrplatform.h</in>
            </df>
          </df>
          <df name="src">
            <in>glad.c</in>
          </df>
        </df>
        <df name="glm">
          <df name="cmake">
          </df>
          <df name="doc">
            <df name="api">
              <df name="search">
              </df>
            </df>
            <df name="manual">
            </df>
            <df name="theme">
            </df>
          </df>
          <df name="glm">
            <df name="detail">
              <in>_features.hpp</in>
              <in>_fixes.hpp</in>
              <in>_noise.hpp</in>
              <in>_swizzle.hpp</in>
              <in>_swizzle_func.hpp</in>
              <in>_vectorize.hpp</in>
              <in>compute_common.hpp</in>
              <in>compute_vector_relational.hpp</in>
              <in>func_common.inl</in>
              <in>func_common_simd.inl</in>
              <in>func_exponential.inl</in>
              <in>func_exponential_simd.inl</in>
              <in>func_geometric.inl</in>
              <in>func_geometric_simd.inl</in>
              <in>func_integer.inl</in>
              <in>func_integer_simd.inl</in>
              <in>func_matrix.inl</in>
              <in>func_matrix_simd.inl</in>
              <in>func_packing.inl</in>
              <in>func_packing_simd.inl</in>
              <in>func_trigonometric.inl</in>
              <in>func_trigonometric_simd.inl</in>
              <in>func_vector_relational.inl</in>
              <in>func_vector_relational_simd.inl</in>
              <in>glm.cpp</in>
              <in>qualifier.hpp</in>
              <in>setup.hpp</in>
              <in>type_float.hpp</in>
              <in>type_half.hpp</in>
              <in>type_half.inl</in>
              <in>type_mat2x2.hpp</in>
              <in>type_mat2x2.inl</in>
              <in>type_mat2x3.hpp</in>
              <in>type_mat2x3.inl</in>
              <in>type_mat2x4.hpp</in>
              <in>type_mat2x4.inl</in>
              <in>type_mat3x2.hpp</in>
              <in>type_mat3x2.inl</in>
              <in>type_mat3x3.hpp</in>
              <in>type_mat3x3.inl</in>
              <in>type_mat3x4.hpp</in>
              <in>type_mat3x4.inl</in>
              <in>type_mat4x2.hpp</in>
              <in>type_mat4x2.inl</in>
              <in>type_mat4x3.hpp</in>
              <in>type_mat4x3.inl</in>
              <in>type_mat4x4.hpp</in>
              <in>type_mat4x4.inl</in>
              <in>type_mat4x4_simd.inl</in>
              <in>type_quat.hpp</in>
              <in>type_quat.inl</in>
              <in>type_quat_simd.inl</in>
              <in>type_vec1.hpp</in>
              <in>type_vec1.inl</in>
              <in>type_vec2.hpp</in>
              <in>type_vec2.inl</in>
              <in>type_vec3.hpp</in>
              <in>type_vec3.inl</in>
              <in>type_vec4.hpp</in>
              <in>type_vec4.inl</in>
              <in>type_vec4_simd.inl</in>
            </df>
            <df name="ext">
              <in>matrix_clip_space.hpp</in>
              <in>matrix_clip_space.inl</in>
              <in>matrix_common.hpp</in>
              <in>matrix_common.inl</in>
              <in>matrix_double2x2.hpp</in>
              <in>matrix_double2x2_precision.hpp</in>
              <in>matrix_double2x3.hpp</in>
              <in>matrix_double2x3_precision.hpp</in>
              <in>matrix_double2x4.hpp</in>
              <in>matrix_double2x4_precision.hpp</in>
              <in>matrix_double3x2.hpp</in>
              <in>matrix_double3x2_precision.hpp</in>
              <in>matrix_double3x3.hpp</in>
              <in>matrix_double3x3_precision.hpp</in>
              <in>matrix_double3x4.hpp</in>
              <in>matrix_double3x4_precision.hpp</in>
              <in>matrix_double4x2.hpp</in>
              <in>matrix_double4x2_precision.hpp</in>
              <in>matrix_double4x3.hpp</in>
              <in>matrix_double4x3_precision.hpp</in>
              <in>matrix_double4x4.hpp</in>
              <in>matrix_double4x4_precision.hpp</in>
              <in>matrix_float2x2.hpp</in>
              <in>matrix_float2x2_precision.hpp</in>
              <in>matrix_float2x3.hpp</in>
              <in>matrix_float2x3_precision.hpp</in>
              <in>matrix_float2x4.hpp</in>
              <in>matrix_float2x4_precision.hpp</in>
              <in>matrix_float3x2.hpp</in>
              <in>matrix_float3x2_precision.hpp</in>
              <in>matrix_float3x3.hpp</in>
              <in>matrix_float3x3_precision.hpp</in>
              <in>matrix_float3x4.hpp</in>
              <in>matrix_float3x4_precision.hpp</in>
              <in>matrix_float4x2.hpp</in>
              <in>matrix_float4x2_precision.hpp</in>
              <in>matrix_float4x3.hpp</in>
              <in>matrix_float4x3_precision.hpp</in>
              <in>matrix_float4x4.hpp</in>
              <in>matrix_float4x4_precision.hpp</in>
              <in>matrix_projection.hpp</in>
              <in>matrix_projection.inl</in>
              <in>matrix_relational.hpp</in>
              <in>matrix_relational.inl</in>
              <in>matrix_transform.hpp</in>
              <in>matrix_transform.inl</in>
              <in>quaternion_common.hpp</in>
              <in>quaternion_common.inl</in>
              <in>quaternion_common_simd.inl</in>
              <in>quaternion_double.hpp</in>
              <in>quaternion_double_precision.hpp</in>
              <in>quaternion_exponential.hpp</in>
              <in>quaternion_exponential.inl</in>
              <in>quaternion_float.hpp</in>
              <in>quaternion_float_precision.hpp</in>
              <in>quaternion_geometric.hpp</in>
              <in>quaternion_geometric.inl</in>
              <in>quaternion_relational.hpp</in>
              <in>quaternion_relational.inl</in>
              <in>quaternion_transform.hpp</in>
              <in>quaternion_transform.inl</in>
              <in>quaternion_trigonometric.hpp</in>
              <in>quaternion_trigonometric.inl</in>
              <in>scalar_common.hpp</in>
              <in>scalar_common.inl</in>
              <in>scalar_constants.hpp</in>
              <in>scalar_constants.inl</in>
              <in>scalar_int_sized.hpp</in>
              <in>scalar_integer.hpp</in>
              <in>scalar_integer.inl</in>
              <in>scalar_relational.hpp</in>
              <in>scalar_relational.inl</in>
              <in>scalar_uint_sized.hpp</in>
              <in>scalar_ulp.hpp</in>
              <in>scalar_ulp.inl</in>
              <in>vector_bool1.hpp</in>
              <in>vector_bool1_precision.hpp</in>
              <in>vector_bool2.hpp</in>
              <in>vector_bool2_precision.hpp</in>
              <in>vector_bool3.hpp</in>
              <in>vector_bool3_precision.hpp</in>
              <in>vector_bool4.hpp</in>
              <in>vector_bool4_precision.hpp</in>
              <in>vector_common.hpp</in>
              <in>vector_common.inl</in>
              <in>vector_double1.hpp</in>
              <in>vector_double1_precision.hpp</in>
              <in>vector_double2.hpp</in>
              <in>vector_double2_precision.hpp</in>
              <in>vector_double3.hpp</in>
              <in>vector_double3_precision.hpp</in>
              <in>vector_double4.hpp</in>
              <in>vector_double4_precision.hpp</in>
              <in>vector_float1.hpp</in>
              <in>vector_float1_precision.hpp</in>
              <in>vector_float2.hpp</in>
              <in>vector_float2_precision.hpp</in>
              <in>vector_float3.hpp</in>
              <in>vector_float3_precision.hpp</in>
              <in>vector_float4.hpp</in>
              <in>vector_float4_precision.hpp</in>
              <in>vector_int1.hpp</in>
              <in>vector_int1_precision.hpp</in>
              <in>vector_int2.hpp</in>
              <in>vector_int2_precision.hpp</in>
              <in>vector_int3.hpp</in>
              <in>vector_int3_precision.hpp</in>
              <in>vector_int4.hpp</in>
              <in>vector_int4_precision.hpp</in>
              <in>vector_integer.hpp</in>
              <in>vector_integer.inl</in>
              <in>vector_relational.hpp</in>
              <in>vector_relational.inl</in>
              <in>vector_uint1.hpp</in>
              <in>vector_uint1_precision.hpp</in>
              <in>vector_uint2.hpp</in>
              <in>vector_uint2_precision.hpp</in>
              <in>vector_uint3.hpp</in>
              <in>vector_uint3_precision.hpp</in>
              <in>vector_uint4.hpp</in>
              <in>vector_uint4_precision.hpp</in>
              <in>vector_ulp.hpp</in>
              <in>vector_ulp.inl</in>
            </df>
            <df name="gtc">
              <in>bitfield.hpp</in>
              <in>bitfield.inl</in>
              <in>color_space.hpp</in>
              <in>color_space.inl</in>
              <in>constants.hpp</in>
              <in>constants.inl</in>
              <in>epsilon.hpp</in>
              <in>epsilon.inl</in>
              <in>integer.hpp</in>
              <in>integer.inl</in>
              <in>matrix_access.hpp</in>
              <in>matrix_access.inl</in>
              <in>matrix_integer.hpp</in>
              <in>matrix_inverse.hpp</in>
              <in>matrix_inverse.inl</in>
              <in>matrix_transform.hpp</in>
              <in>matrix_transform.inl</in>
              <in>noise.hpp</in>
              <in>noise.inl</in>
              <in>packing.hpp</in>
              <in>packing.inl</in>
              <in>quaternion.hpp</in>
              <in>quaternion.inl</in>
              <in>quaternion_simd.inl</in>
              <in>random.hpp</in>
              <in>random.inl</in>
              <in>reciprocal.hpp</in>
              <in>reciprocal.inl</in>
              <in>round.hpp</in>
              <in>round.inl</in>
              <in>type_aligned.hpp</in>
              <in>type_precision.hpp</in>
              <in>type_precision.inl</in>
              <in>type_ptr.hpp</in>
              <in>type_ptr.inl</in>
              <in>ulp.hpp</in>
              <in>ulp.inl</in>
              <in>vec1.hpp</in>
            </df>
            <df name="gtx">
              <in>associated_min_max.hpp</in>
              <in>associated_min_max.inl</in>
              <in>bit.hpp</in>
              <in>bit.inl</in>
              <in>closest_point.hpp</in>
              <in>closest_point.inl</in>
              <in>color_encoding.hpp</in>
              <in>color_encoding.inl</in>
              <in>color_space.hpp</in>
              <in>color_space.inl</in>
              <in>color_space_YCoCg.hpp</in>
              <in>color_space_YCoCg.inl</in>
              <in>common.hpp</in>
              <in>common.inl</in>
              <in>compatibility.hpp</in>
              <in>compatibility.inl</in>
              <in>component_wise.hpp</in>
              <in>component_wise.inl</in>
              <in>dual_quaternion.hpp</in>
              <in>dual_quaternion.inl</in>
              <in>easing.hpp</in>
              <in>easing.inl</in>
              <in>euler_angles.hpp</in>
              <in>euler_angles.inl</in>
              <in>extend.hpp</in>
              <in>extend.inl</in>
              <in>extended_min_max.hpp</in>
              <in>extended_min_max.inl</in>
              <in>exterior_product.hpp</in>
              <in>exterior_product.inl</in>
              <in>fast_exponential.hpp</in>
              <in>fast_exponential.inl</in>
              <in>fast_square_root.hpp</in>
              <in>fast_square_root.inl</in>
              <in>fast_trigonometry.hpp</in>
              <in>fast_trigonometry.inl</in>
              <in>float_notmalize.inl</in>
              <in>functions.hpp</in>
              <in>functions.inl</in>
              <in>gradient_paint.hpp</in>
              <in>gradient_paint.inl</in>
              <in>handed_coordinate_space.hpp</in>
              <in>handed_coordinate_space.inl</in>
              <in>hash.hpp</in>
              <in>hash.inl</in>
              <in>integer.hpp</in>
              <in>integer.inl</in>
              <in>intersect.hpp</in>
              <in>intersect.inl</in>
              <in>io.hpp</in>
              <in>io.inl</in>
              <in>log_base.hpp</in>
              <in>log_base.inl</in>
              <in>matrix_cross_product.hpp</in>
              <in>matrix_cross_product.inl</in>
              <in>matrix_decompose.hpp</in>
              <in>matrix_decompose.inl</in>
              <in>matrix_factorisation.hpp</in>
              <in>matrix_factorisation.inl</in>
              <in>matrix_interpolation.hpp</in>
              <in>matrix_interpolation.inl</in>
              <in>matrix_major_storage.hpp</in>
              <in>matrix_major_storage.inl</in>
              <in>matrix_operation.hpp</in>
              <in>matrix_operation.inl</in>
              <in>matrix_query.hpp</in>
              <in>matrix_query.inl</in>
              <in>matrix_transform_2d.hpp</in>
              <in>matrix_transform_2d.inl</in>
              <in>mixed_product.hpp</in>
              <in>mixed_product.inl</in>
              <in>norm.hpp</in>
              <in>norm.inl</in>
              <in>normal.hpp</in>
              <in>normal.inl</in>
              <in>normalize_dot.hpp</in>
              <in>normalize_dot.inl</in>
              <in>number_precision.hpp</in>
              <in>number_precision.inl</in>
              <in>optimum_pow.hpp</in>
              <in>optimum_pow.inl</in>
              <in>orthonormalize.hpp</in>
              <in>orthonormalize.inl</in>
              <in>perpendicular.hpp</in>
              <in>perpendicular.inl</in>
              <in>polar_coordinates.hpp</in>
              <in>polar_coordinates.inl</in>
              <in>projection.hpp</in>
              <in>projection.inl</in>
              <in>quaternion.hpp</in>
              <in>quaternion.inl</in>
              <in>range.hpp</in>
              <in>raw_data.hpp</in>
              <in>raw_data.inl</in>
              <in>rotate_normalized_axis.hpp</in>
              <in>rotate_normalized_axis.inl</in>
              <in>rotate_vector.hpp</in>
              <in>rotate_vector.inl</in>
              <in>scalar_multiplication.hpp</in>
              <in>scalar_relational.hpp</in>
              <in>scalar_relational.inl</in>
              <in>spline.hpp</in>
              <in>spline.inl</in>
              <in>std_based_type.hpp</in>
              <in>std_based_type.inl</in>
              <in>string_cast.hpp</in>
              <in>string_cast.inl</in>
              <in>texture.hpp</in>
              <in>texture.inl</in>
              <in>transform.hpp</in>
              <in>transform.inl</in>
              <in>transform2.hpp</in>
              <in>transform2.inl</in>
              <in>type_aligned.hpp</in>
              <in>type_aligned.inl</in>
              <in>type_trait.hpp</in>
              <in>type_trait.inl</in>
              <in>vec_swizzle.hpp</in>
              <in>vector_angle.hpp</in>
              <in>vector_angle.inl</in>
              <in>vector_query.hpp</in>
              <in>vector_query.inl</in>
              <in>wrap.hpp</in>
              <in>wrap.inl</in>
            </df>
            <df name="simd">
              <in>common.h</in>
              <in>exponential.h</in>
              <in>geometric.h</in>
              <in>integer.h</in>
              <in>matrix.h</in>
              <in>packing.h</in>
              <in>platform.h</in>
              <in>trigonometric.h</in>
              <in>vector_relational.h</in>
            </df>
            <in>common.hpp</in>
            <in>exponential.hpp</in>
            <in>ext.hpp</in>
            <in>fwd.hpp</in>
            <in>geometric.hpp</in>
            <in>glm.hpp</in>
            <in>integer.hpp</in>
            <in>mat2x2.hpp</in>
            <in>mat2x3.hpp</in>
            <in>mat2x4.hpp</in>
            <in>mat3x2.hpp</in>
            <in>mat3x3.hpp</in>
            <in>mat3x4.hpp</in>
            <in>mat4x2.hpp</in>
            <in>mat4x3.hpp</in>
            <in>mat4x4.hpp</in>
            <in>matrix.hpp</in>
            <in>packing.hpp</in>
            <in>trigonometric.hpp</in>
            <in>vec2.hpp</in>
            <in>vec3.hpp</in>
            <in>vec4.hpp</in>
            <in>vector_relational.hpp</in>
          </df>
          <df name="test">
            <df name="bug">
              <in>bug_ms_vec_static.cpp</in>
            </df>
            <df name="core">
              <in>core_cpp_constexpr.cpp</in>
              <in>core_cpp_defaulted_ctor.cpp</in>
              <in>core_force_aligned_gentypes.cpp</in>
              <in>core_force_ctor_init.cpp</in>
              <in>core_force_explicit_ctor.cpp</in>
              <in>core_force_inline.cpp</in>
              <in>core_force_pure.cpp</in>
              <in>core_force_unrestricted_gentype.cpp</in>
              <in>core_force_xyzw_only.cpp</in>
              <in>core_func_common.cpp</in>
              <in>core_func_exponential.cpp</in>
              <in>core_func_geometric.cpp</in>
              <in>core_func_integer.cpp</in>
              <in>core_func_integer_bit_count.cpp</in>
              <in>core_func_integer_find_lsb.cpp</in>
              <in>core_func_integer_find_msb.cpp</in>
              <in>core_func_matrix.cpp</in>
              <in>core_func_noise.cpp</in>
              <in>core_func_packing.cpp</in>
              <in>core_func_swizzle.cpp</in>
              <in>core_func_trigonometric.cpp</in>
              <in>core_func_vector_relational.cpp</in>
              <in>core_setup_force_cxx98.cpp</in>
              <in>core_setup_force_size_t_length.cpp</in>
              <in>core_setup_message.cpp</in>
              <in>core_setup_platform_unknown.cpp</in>
              <in>core_setup_precision.cpp</in>
              <in>core_type_aligned.cpp</in>
              <in>core_type_cast.cpp</in>
              <in>core_type_ctor.cpp</in>
              <in>core_type_int.cpp</in>
              <in>core_type_length.cpp</in>
              <in>core_type_mat2x2.cpp</in>
              <in>core_type_mat2x3.cpp</in>
              <in>core_type_mat2x4.cpp</in>
              <in>core_type_mat3x2.cpp</in>
              <in>core_type_mat3x3.cpp</in>
              <in>core_type_mat3x4.cpp</in>
              <in>core_type_mat4x2.cpp</in>
              <in>core_type_mat4x3.cpp</in>
              <in>core_type_mat4x4.cpp</in>
              <in>core_type_vec1.cpp</in>
              <in>core_type_vec2.cpp</in>
              <in>core_type_vec3.cpp</in>
              <in>core_type_vec4.cpp</in>
            </df>
            <df name="ext">
              <in>ext_matrix_clip_space.cpp</in>
              <in>ext_matrix_common.cpp</in>
              <in>ext_matrix_projection.cpp</in>
              <in>ext_matrix_relational.cpp</in>
              <in>ext_matrix_transform.cpp</in>
              <in>ext_quaternion_common.cpp</in>
              <in>ext_quaternion_exponential.cpp</in>
              <in>ext_quaternion_geometric.cpp</in>
              <in>ext_quaternion_relational.cpp</in>
              <in>ext_quaternion_transform.cpp</in>
              <in>ext_quaternion_trigonometric.cpp</in>
              <in>ext_quaternion_type.cpp</in>
              <in>ext_scalar_common.cpp</in>
              <in>ext_scalar_constants.cpp</in>
              <in>ext_scalar_int_sized.cpp</in>
              <in>ext_scalar_integer.cpp</in>
              <in>ext_scalar_relational.cpp</in>
              <in>ext_scalar_uint_sized.cpp</in>
              <in>ext_scalar_ulp.cpp</in>
              <in>ext_vec1.cpp</in>
              <in>ext_vector_bool1.cpp</in>
              <in>ext_vector_common.cpp</in>
              <in>ext_vector_iec559.cpp</in>
              <in>ext_vector_integer.cpp</in>
              <in>ext_vector_integer_sized.cpp</in>
              <in>ext_vector_relational.cpp</in>
              <in>ext_vector_ulp.cpp</in>
            </df>
            <df name="gtc">
              <in>gtc_bitfield.cpp</in>
              <in>gtc_color_space.cpp</in>
              <in>gtc_constants.cpp</in>
              <in>gtc_epsilon.cpp</in>
              <in>gtc_integer.cpp</in>
              <in>gtc_matrix_access.cpp</in>
              <in>gtc_matrix_integer.cpp</in>
              <in>gtc_matrix_inverse.cpp</in>
              <in>gtc_matrix_transform.cpp</in>
              <in>gtc_noise.cpp</in>
              <in>gtc_packing.cpp</in>
              <in>gtc_quaternion.cpp</in>
              <in>gtc_random.cpp</in>
              <in>gtc_reciprocal.cpp</in>
              <in>gtc_round.cpp</in>
              <in>gtc_type_aligned.cpp</in>
              <in>gtc_type_precision.cpp</in>
              <in>gtc_type_ptr.cpp</in>
              <in>gtc_ulp.cpp</in>
              <in>gtc_user_defined_types.cpp</in>
              <in>gtc_vec1.cpp</in>
            </df>
            <df name="gtx">
              <in>gtx.cpp</in>
              <in>gtx_associated_min_max.cpp</in>
              <in>gtx_closest_point.cpp</in>
              <in>gtx_color_encoding.cpp</in>
              <in>gtx_color_space.cpp</in>
              <in>gtx_color_space_YCoCg.cpp</in>
              <in>gtx_common.cpp</in>
              <in>gtx_compatibility.cpp</in>
              <in>gtx_component_wise.cpp</in>
              <in>gtx_dual_quaternion.cpp</in>
              <in>gtx_easing.cpp</in>
              <in>gtx_euler_angle.cpp</in>
              <in>gtx_extend.cpp</in>
              <in>gtx_extended_min_max.cpp</in>
              <in>gtx_extented_min_max.cpp</in>
              <in>gtx_exterior_product.cpp</in>
              <in>gtx_fast_exponential.cpp</in>
              <in>gtx_fast_square_root.cpp</in>
              <in>gtx_fast_trigonometry.cpp</in>
              <in>gtx_functions.cpp</in>
              <in>gtx_gradient_paint.cpp</in>
              <in>gtx_handed_coordinate_space.cpp</in>
              <in>gtx_int_10_10_10_2.cpp</in>
              <in>gtx_integer.cpp</in>
              <in>gtx_intersect.cpp</in>
              <in>gtx_io.cpp</in>
              <in>gtx_load.cpp</in>
              <in>gtx_log_base.cpp</in>
              <in>gtx_matrix_cross_product.cpp</in>
              <in>gtx_matrix_decompose.cpp</in>
              <in>gtx_matrix_factorisation.cpp</in>
              <in>gtx_matrix_interpolation.cpp</in>
              <in>gtx_matrix_major_storage.cpp</in>
              <in>gtx_matrix_operation.cpp</in>
              <in>gtx_matrix_query.cpp</in>
              <in>gtx_matrix_transform_2d.cpp</in>
              <in>gtx_mixed_product.cpp</in>
              <in>gtx_norm.cpp</in>
              <in>gtx_normal.cpp</in>
              <in>gtx_normalize_dot.cpp</in>
              <in>gtx_number_precision.cpp</in>
              <in>gtx_optimum_pow.cpp</in>
              <in>gtx_orthonormalize.cpp</in>
              <in>gtx_perpendicular.cpp</in>
              <in>gtx_polar_coordinates.cpp</in>
              <in>gtx_projection.cpp</in>
              <in>gtx_quaternion.cpp</in>
              <in>gtx_random.cpp</in>
              <in>gtx_range.cpp</in>
              <in>gtx_rotate_normalized_axis.cpp</in>
              <in>gtx_rotate_vector.cpp</in>
              <in>gtx_scalar_multiplication.cpp</in>
              <in>gtx_scalar_relational.cpp</in>
              <in>gtx_simd_mat4.cpp</in>
              <in>gtx_simd_vec4.cpp</in>
              <in>gtx_spline.cpp</in>
              <in>gtx_string_cast.cpp</in>
              <in>gtx_texture.cpp</in>
              <in>gtx_type_aligned.cpp</in>
              <in>gtx_type_trait.cpp</in>
              <in>gtx_vec_swizzle.cpp</in>
              <in>gtx_vector_angle.cpp</in>
              <in>gtx_vector_query.cpp</in>
              <in>gtx_wrap.cpp</in>
            </df>
            <df name="perf">
              <in>perf_matrix_div.cpp</in>
              <in>perf_matrix_inverse.cpp</in>
              <in>perf_matrix_mul.cpp</in>
              <in>perf_matrix_mul_vector.cpp</in>
              <in>perf_matrix_transpose.cpp</in>
              <in>perf_vector_mul_matrix.cpp</in>
            </df>
          </df>
          <df name="util">
          </df>
        </df>
      </df>
      <df name="evoid">
        <df name="include">
          <in>events.hpp</in>
          <in>menu.hpp</in>
        </df>
        <df name="runtime">
          <df name="share">
          </df>
        </df>
        <df name="src">
          <in>evoid.cpp</in>
          <in>menu.cpp</in>
        </df>
      </df>
      <df name="examples">
        <in>000.cpp</in>
        <in>console.cpp</in>
        <in>console.hpp</in>
      </df>
      <df name="include">
        <df name="draw">
          <in>camera_t.hpp</in>
          <in>error_t.hpp</in>
          <in>event_t.hpp</in>
          <in>frameStage_t.hpp</in>
          <in>input_t.hpp</in>
          <in>jsonHelpers.hpp</in>
          <in>mesh_t.hpp</in>
          <in>precompile.hpp</in>
          <in>settings_t.hpp</in>
          <in>shader_t.hpp</in>
          <in>system_t.hpp</in>
          <in>texture_t.hpp</in>
          <in>vao_t.hpp</in>
        </df>
        <in>draw.hpp</in>
      </df>
      <df name="share">
      </df>
      <df name="src">
        <in>camera_t.cpp</in>
        <in>event_t.cpp</in>
        <in>input_t.cpp</in>
        <in>mesh_t.cpp</in>
        <in>settings_t.cpp</in>
        <in>shader_t.cpp</in>
        <in>system_t.cpp</in>
        <in>targa.cpp</in>
        <in>texture_t.cpp</in>
        <in>vao_t.cpp</in>
        <in>wavefront.cpp</in>
      </df>
    </df>
  </logicalFolder>
  <projectmakefile></projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}"</runcommand>
        <rundir>.</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
